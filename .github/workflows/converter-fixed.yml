name: Custom Template Converter

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Create directories
        run: |
          mkdir -p Surge
          mkdir -p Loon
      
      - name: Create template converter script
        run: |
          cat > template-convert.sh << 'EOF'
          #!/bin/bash
          
          # Get filenames from command line
          INPUT_FILE=$1
          OUTPUT_SURGE=$2
          OUTPUT_LOON=$3
          
          # Get the filename without extension
          FILENAME=$(basename "$INPUT_FILE" .js)
          
          # Extract app name from the filename or comment
          APP_NAME="${FILENAME}"
          
          # Try to find a better name from comments
          if grep -q "📜\|🔐APP\|APP解锁" "$INPUT_FILE"; then
            POTENTIAL_NAME=$(grep -E "📜|🔐APP|APP解锁" "$INPUT_FILE" | head -1 | sed 's/.*📜//g' | sed 's/^[[:space:]]*//')
            if [ ! -z "$POTENTIAL_NAME" ]; then
              APP_NAME="$POTENTIAL_NAME"
            fi
          fi
          
          # Try to extract URLs and patterns
          URL_PATTERN=""
          if grep -q "script-response-body\|script-request-body" "$INPUT_FILE"; then
            URL_PATTERN=$(grep -E "([^ ]+)[ ]+url[ ]+script-(response|request)-body" "$INPUT_FILE" | head -1 | awk '{print $1}')
          elif grep -q "\$request.url\|\$response.body" "$INPUT_FILE"; then
            # If the file contains request or response handling, look for hostname in MITM
            if grep -q "\[mitm\]" "$INPUT_FILE"; then
              HOSTNAME=$(grep -A 5 "\[mitm\]" "$INPUT_FILE" | grep "hostname" | head -1 | sed -E "s/hostname[ ]*=[ ]*(.*)/\1/" | sed 's/[[:space:]]*$//' | awk -F'[ ,]' '{print $1}')
              if [ ! -z "$HOSTNAME" ]; then
                URL_PATTERN="^https?:\/\/${HOSTNAME}\/.*$"
              fi
            fi
          fi
          
          # If we still don't have a pattern, search for https:// in the file
          if [ -z "$URL_PATTERN" ]; then
            URL_PATTERN=$(grep -o "https://[^'\" ]*" "$INPUT_FILE" | head -1 | sed 's/https:\/\//^https?:\/\//' | sed 's/\/$/\/.*$/')
          fi
          
          # Extract hostname for MITM
          HOSTNAME=""
          if [ ! -z "$URL_PATTERN" ]; then
            HOSTNAME=$(echo "$URL_PATTERN" | sed -E 's/^\^https\?:\/\///' | sed -E 's/\/.*$//')
          elif grep -q "\[mitm\]" "$INPUT_FILE"; then
            HOSTNAME=$(grep -A 5 "\[mitm\]" "$INPUT_FILE" | grep "hostname" | head -1 | sed -E "s/hostname[ ]*=[ ]*(.*)/\1/" | sed 's/[[:space:]]*$//' | awk -F'[ ,]' '{print $1}')
          fi
          
          # Create Loon plugin file based on template
          cat > "$OUTPUT_LOON" << LOON
#!name = ${APP_NAME}🔐APP解锁
#!desc = 媒体制作 - 插件
#!author = 🅜ⓘ🅚ⓔ🅟ⓗ🅘ⓔ
#!icon = https://raw.githubusercontent.com/Mikephie/icons/main/icon/${FILENAME}.png

[Script]
http-response ${URL_PATTERN} script-path=https://raw.githubusercontent.com/Mikephie/Script/main/qx/${FILENAME}.js, requires-body=true, timeout=60, tag=${FILENAME}

[MITM]
hostname = ${HOSTNAME}
LOON
          
          # Create Surge module file based on template
          cat > "$OUTPUT_SURGE" << SURGE
#!name = ${APP_NAME}🔐APP
#!desc = 媒体制作 - 模块
#!author = 🅜ⓘ🅚ⓔ🅟ⓗ🅘ⓔ
#!category=🔐APP

[Script]
${FILENAME} = type=http-response, pattern=${URL_PATTERN}, script-path=https://raw.githubusercontent.com/Mikephie/Script/main/qx/${FILENAME}.js, requires-body=true, max-size=-1, timeout=60

[MITM]
hostname = %APPEND% ${HOSTNAME}
SURGE
          
          echo "Converted $FILENAME to template format"
          EOF
          
          chmod +x template-convert.sh
      
      - name: Convert scripts
        run: |
          for file in QuantumultX/*.js; do
            filename=$(basename "$file" .js)
            echo "Converting $filename..."
            ./template-convert.sh "$file" "Surge/${filename}.sgmodule" "Loon/${filename}.plugin"
          done
      
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add Surge/ Loon/
          git diff-index --quiet HEAD || git commit -m "Auto convert scripts"
          
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
          git push
